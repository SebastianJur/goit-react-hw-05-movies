{"version":3,"file":"static/js/888.fb82e7d0.chunk.js","mappings":"uRACA,EAAwB,4BAAxB,EAA+D,+B,kBCIlDA,EAAe,WAAO,IAAD,IAChC,GAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8CF,EAAAA,EAAAA,UAAS,IAAvD,eAAOG,EAAP,KAAwBC,EAAxB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAWC,EAAAA,EAAAA,MAGXC,EAFO,IAAIC,KAAKT,EAAMU,cAEHC,cAEnBC,EAAc,oBAAGN,EAASO,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAGzCC,EAAY,mCAAG,WAAMX,GAAN,4FACCY,EAAAA,EAAAA,IAAaZ,GADd,OACbJ,EADa,OAEbiB,EAAajB,EAAMkB,OACnBA,EAASD,EAAWE,KAAI,SAAAC,GAAM,OAAIA,EAAOC,IAAX,IAAiBC,KAAK,MAC1DrB,EAASD,GACTG,EAAmBe,GALA,2CAAH,sDAYlB,OAJAK,EAAAA,EAAAA,YAAU,WACRR,EAAaX,EACd,GAAE,CAACA,KAGF,+BACE,6BACE,SAAC,KAAD,CAAMoB,GAAIZ,EAAV,+BACA,0BACGZ,EAAMyB,MADT,KACkBjB,EADlB,QAGA,2CAAmBR,EAAM0B,aAAzB,cACA,gBACEC,UAAWC,EACXC,IACE7B,EAAM8B,YAAN,2DACwD9B,EAAM8B,aAD9D,2DAIFC,IAAK/B,EAAMyB,SAEb,wCACA,cAAGE,UAAWC,EAAd,SAA6B5B,EAAMgC,YACnC,oCACA,yBAAI9B,EAAJ,QACA,mBACA,qDACA,2BACE,yBACE,SAAC,KAAD,CAAMsB,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,EAAAS,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,UAKT,EAED,G,8LCpEMC,EAAU,mCAGhBC,EAAAA,EAAAA,SAAAA,QAFiB,+BAIV,IAAMC,EAAa,mCAAG,6GAEFD,EAAAA,EAAAA,IAAA,sCACUD,EADV,YAFE,cAEnBG,EAFmB,yBAKlBA,EAASC,MALS,gCAOzBC,QAAQC,MAAR,MAPyB,yDAAH,qDAWbzB,EAAY,mCAAG,WAAMZ,GAAN,gGAEDgC,EAAAA,EAAAA,IAAA,iBACXhC,EADW,oBACQ+B,EADR,YAFC,cAElBG,EAFkB,yBAKjBA,EAASC,MALQ,gCAOxBC,QAAQC,MAAR,MAPwB,yDAAH,sDAWZC,EAAS,mCAAG,WAAMtC,GAAN,gGAEEgC,EAAAA,EAAAA,IAAA,iBACXhC,EADW,4BACgB+B,EADhB,YAFF,cAEfG,EAFe,yBAKdA,EAASC,MALK,gCAOrBC,QAAQC,MAAR,MAPqB,yDAAH,sDAWTE,EAAY,mCAAG,WAAMvC,GAAN,gGAEDgC,EAAAA,EAAAA,IAAA,iBACXhC,EADW,4BACgB+B,EADhB,YAFC,cAElBG,EAFkB,yBAKjBA,EAASC,KAAKK,SALG,gCAOxBJ,QAAQC,MAAR,MAPwB,yDAAH,sDAWZI,EAAW,mCAAG,WAAMC,GAAN,gGAEAV,EAAAA,EAAAA,IAAA,gCACID,EADJ,kBACqBW,IAHrB,cAEjBR,EAFiB,yBAKhBA,EAASC,KAAKK,SALE,gCAOvBJ,QAAQC,MAAR,MAPuB,yDAAH,qD","sources":["webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","services/Api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"image\":\"MovieDetails_image__tPD8f\",\"overview\":\"MovieDetails_overview__EVogb\"};","import { Suspense, useState, useEffect } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport css from './MovieDetails.module.css';\nimport { fetchDetails } from '../../services/Api';\n\nexport const MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const [movieCategories, setMovieCategories] = useState('');\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const date = new Date(movie.release_date);\n\n  const releaseDate = date.getFullYear();\n\n  const goBackLinkHref = location.state?.from ?? '/';\n  \n\n  const getMovieById = async movieId => {\n    const movie = await fetchDetails(movieId);\n    const categories = movie.genres;\n    const genres = categories.map(object => object.name).join(', ');\n    setMovie(movie);\n    setMovieCategories(genres);\n  };\n\n  useEffect(() => {\n    getMovieById(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      <main>\n        <Link to={goBackLinkHref}> ⇦ Go Back </Link>\n        <h2>\n          {movie.title} ({releaseDate})\n        </h2>\n        <h3>Vote average: {movie.vote_average} ⭐</h3>\n        <img\n          className={css.image}\n          src={\n            movie.poster_path\n              ? `https://www.themoviedb.org/t/p/w220_and_h330_face${movie.poster_path}`\n              : `https://via.placeholder.com/220x330?text=Theres+no+photo`\n          }\n          alt={movie.title}\n        />\n        <h3>Overview: </h3>\n        <p className={css.overview}>{movie.overview}</p>\n        <h3>Genres</h3>\n        <p>{movieCategories} </p>\n        <hr />\n        <h3> Additional Information</h3>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n        <Suspense fallback={<div>Loading subpage...</div>}>\n          <Outlet />\n        </Suspense>\n      </main>\n    </>\n  );\n};\n\nexport default MovieDetails;","import axios from 'axios';\nconst API_KEY = '97d70a3173ca56d5850cad3599f6b1e5';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const fetchTrending = async () => {\n  try {\n    const response = await axios.get(\n      `/trending/movie/day?api_key=${API_KEY}&page=1`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}?api_key=${API_KEY}&page=1`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/credits?api_key=${API_KEY}&page=1`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/reviews?api_key=${API_KEY}&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchSearch = async query => {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};"],"names":["MovieDetails","useState","movie","setMovie","movieCategories","setMovieCategories","movieId","useParams","location","useLocation","releaseDate","Date","release_date","getFullYear","goBackLinkHref","state","from","getMovieById","fetchDetails","categories","genres","map","object","name","join","useEffect","to","title","vote_average","className","css","src","poster_path","alt","overview","Suspense","fallback","API_KEY","axios","fetchTrending","response","data","console","error","fetchCast","fetchReviews","results","fetchSearch","query"],"sourceRoot":""}