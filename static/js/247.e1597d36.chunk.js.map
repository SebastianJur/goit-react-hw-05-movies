{"version":3,"file":"static/js/247.e1597d36.chunk.js","mappings":"4PAKaA,EAAO,WAClB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,qGACUC,EAAAA,EAAAA,GAAUP,GADpB,OACRG,EADQ,OAEdC,EAAaD,EAAUK,MAFT,2CAAH,qDAIbF,EAAQN,EACT,GAAE,CAACA,KAGF,iCACE,kCACA,wBACGG,EAAUM,KAAI,SAAAD,GAAI,OACjB,gBAAkBE,MAAO,CAAEC,UAAW,QAAtC,WACE,gBACED,MAAO,CAAEE,MAAO,QAASC,OAAQ,aACjCC,IACEN,EAAKO,aAAL,0CACuCP,EAAKO,cAD5C,2DAIFC,IAAG,UAAKR,EAAKS,KAAV,kBAEL,uBAAIT,EAAKS,QACT,uCAAeT,EAAKU,eAXbV,EAAKW,GADG,QAkB1B,EAED,W,8LCxCMC,EAAU,mCAGhBC,EAAAA,EAAAA,SAAAA,QAFiB,+BAIV,IAAMC,EAAa,mCAAG,6GAEFD,EAAAA,EAAAA,IAAA,sCACUD,EADV,YAFE,cAEnBG,EAFmB,yBAKlBA,EAASC,MALS,gCAOzBC,QAAQC,MAAR,MAPyB,yDAAH,qDAWbC,EAAY,mCAAG,WAAM3B,GAAN,gGAEDqB,EAAAA,EAAAA,IAAA,iBACXrB,EADW,oBACQoB,EADR,YAFC,cAElBG,EAFkB,yBAKjBA,EAASC,MALQ,gCAOxBC,QAAQC,MAAR,MAPwB,yDAAH,sDAWZnB,EAAS,mCAAG,WAAMP,GAAN,gGAEEqB,EAAAA,EAAAA,IAAA,iBACXrB,EADW,4BACgBoB,EADhB,YAFF,cAEfG,EAFe,yBAKdA,EAASC,MALK,gCAOrBC,QAAQC,MAAR,MAPqB,yDAAH,sDAWTE,EAAY,mCAAG,WAAM5B,GAAN,gGAEDqB,EAAAA,EAAAA,IAAA,iBACXrB,EADW,4BACgBoB,EADhB,YAFC,cAElBG,EAFkB,yBAKjBA,EAASC,KAAKK,SALG,gCAOxBJ,QAAQC,MAAR,MAPwB,yDAAH,sDAWZI,EAAW,mCAAG,WAAMC,GAAN,gGAEAV,EAAAA,EAAAA,IAAA,gCACID,EADJ,kBACqBW,IAHrB,cAEjBR,EAFiB,yBAKhBA,EAASC,KAAKK,SALE,gCAOvBJ,QAAQC,MAAR,MAPuB,yDAAH,qD","sources":["components/Cast/Cast.jsx","services/Api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from '../../services/Api.js';\n\n\nexport const Cast = () => {\n  const { movieId } = useParams();\n  const [movieCast, setMovieCast] = useState([]);\n\n  useEffect(() => {\n    const getCast = async () => {\n      const movieCast = await fetchCast(movieId);\n      setMovieCast(movieCast.cast);\n    };\n    getCast(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      <h2>Cast</h2>\n      <ul>\n        {movieCast.map(cast => (\n          <li key={cast.id} style={{ listStyle: 'none' }}>\n            <img\n              style={{ width: '200px', border: '1px solid' }}\n              src={\n                cast.profile_path\n                  ? `https://image.tmdb.org/t/p/w500/${cast.profile_path}`\n                  : `https://via.placeholder.com/220x330?text=Theres+no+photo`\n              }\n              alt={`${cast.name}'s portrait`}\n            />\n            <p>{cast.name}</p>\n            <p>character: {cast.character}</p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;","import axios from 'axios';\nconst API_KEY = '97d70a3173ca56d5850cad3599f6b1e5';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const fetchTrending = async () => {\n  try {\n    const response = await axios.get(\n      `/trending/movie/day?api_key=${API_KEY}&page=1`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}?api_key=${API_KEY}&page=1`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/credits?api_key=${API_KEY}&page=1`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/reviews?api_key=${API_KEY}&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchSearch = async query => {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};"],"names":["Cast","movieId","useParams","useState","movieCast","setMovieCast","useEffect","getCast","fetchCast","cast","map","style","listStyle","width","border","src","profile_path","alt","name","character","id","API_KEY","axios","fetchTrending","response","data","console","error","fetchDetails","fetchReviews","results","fetchSearch","query"],"sourceRoot":""}