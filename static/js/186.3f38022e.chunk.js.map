{"version":3,"file":"static/js/186.3f38022e.chunk.js","mappings":"+PAIaA,EAAU,WACrB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,qGACUC,EAAAA,EAAAA,IAAaP,GADvB,QACXG,EADW,QAEAK,OAAS,GACxBJ,EAAgBD,GAHD,2CAAH,qDAMhBG,EAAWN,EACZ,GAAE,CAACA,KAGF,iCACE,oCACyB,IAAxBG,EAAaK,QACZ,8DAEA,wBACGL,EAAaM,KAAI,SAAAC,GAAM,OACtB,2BACE,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GADM,QAUjC,EAED,W,8LCpCMC,EAAU,mCAGhBC,EAAAA,EAAAA,SAAAA,QAFiB,+BAIV,IAAMC,EAAa,mCAAG,6GAEFD,EAAAA,EAAAA,IAAA,sCACUD,EADV,YAFE,cAEnBG,EAFmB,yBAKlBA,EAASC,MALS,gCAOzBC,QAAQC,MAAR,MAPyB,yDAAH,qDAWbC,EAAY,mCAAG,WAAMrB,GAAN,gGAEDe,EAAAA,EAAAA,IAAA,iBACXf,EADW,oBACQc,EADR,YAFC,cAElBG,EAFkB,yBAKjBA,EAASC,MALQ,gCAOxBC,QAAQC,MAAR,MAPwB,yDAAH,sDAWZE,EAAS,mCAAG,WAAMtB,GAAN,gGAEEe,EAAAA,EAAAA,IAAA,iBACXf,EADW,4BACgBc,EADhB,YAFF,cAEfG,EAFe,yBAKdA,EAASC,MALK,gCAOrBC,QAAQC,MAAR,MAPqB,yDAAH,sDAWTb,EAAY,mCAAG,WAAMP,GAAN,gGAEDe,EAAAA,EAAAA,IAAA,iBACXf,EADW,4BACgBc,EADhB,YAFC,cAElBG,EAFkB,yBAKjBA,EAASC,KAAKK,SALG,gCAOxBJ,QAAQC,MAAR,MAPwB,yDAAH,sDAWZI,EAAW,mCAAG,WAAMC,GAAN,gGAEAV,EAAAA,EAAAA,IAAA,gCACID,EADJ,kBACqBW,IAHrB,cAEjBR,EAFiB,yBAKhBA,EAASC,KAAKK,SALE,gCAOvBJ,QAAQC,MAAR,MAPuB,yDAAH,qD","sources":["components/Reviews/Reviews.jsx","services/Api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from '../../services/Api.js';\n\nexport const Reviews = () => {\n  const { movieId } = useParams();\n  const [movieReviews, setMovieReviews] = useState([]);\n\n  useEffect(() => {\n    const getReviews = async () => {\n      const movieReviews = await fetchReviews(movieId);\n      if (movieReviews.length > 0) {\n        setMovieReviews(movieReviews);\n      }\n    };\n    getReviews(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      <h2>Reviews</h2>\n      {movieReviews.length === 0 ? (\n        <p>There is no review for this movie</p>\n      ) : (\n        <ul>\n          {movieReviews.map(review => (\n            <li key={review.id}>\n              <h3>author: {review.author}</h3>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;","import axios from 'axios';\nconst API_KEY = '97d70a3173ca56d5850cad3599f6b1e5';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const fetchTrending = async () => {\n  try {\n    const response = await axios.get(\n      `/trending/movie/day?api_key=${API_KEY}&page=1`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}?api_key=${API_KEY}&page=1`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/credits?api_key=${API_KEY}&page=1`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/reviews?api_key=${API_KEY}&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchSearch = async query => {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};"],"names":["Reviews","movieId","useParams","useState","movieReviews","setMovieReviews","useEffect","getReviews","fetchReviews","length","map","review","author","content","id","API_KEY","axios","fetchTrending","response","data","console","error","fetchDetails","fetchCast","results","fetchSearch","query"],"sourceRoot":""}